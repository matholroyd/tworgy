- content_for :head do
  %meta{:name => "viewport", :content => "initial-scale=1.0, user-scalable=no"}
  %script{:type => "text/javascript", :src => "http://maps.google.com/maps/api/js?sensor=false"}
  %script{:type => "text/javascript", :src => "http://www.google.com/jsapi"}
  :javascript
    var geocoder = new google.maps.Geocoder();
    var map;
    var marker;
    var dialogSetMarker;
  
    function setupMap() {
      var latlng = new google.maps.LatLng(-34.397, 150.644);
      if (google.loader.ClientLocation) {
        latlng = new google.maps.LatLng(google.loader.ClientLocation.latitude, google.loader.ClientLocation.longitude);
      }

      var myOptions = {
        zoom: 5,
        center: latlng,
        mapTypeId: google.maps.MapTypeId.ROADMAP
      };
      map = new google.maps.Map($("#map_canvas:first")[0], myOptions);
    }
    
    function findAddress() {
      geocoder.geocode( { 'address': $('#inputAddress').val()}, function(results, status) {
        if (status == google.maps.GeocoderStatus.OK) {
          map.fitBounds(results[0].geometry.bounds);
        } else {
          alert("Geocode was not successful for the following reason: " + status);
        }
      });
    }
     
    function addMarker(tworgy_id, pos) {
      if(marker) {
        clearMarker();
      }
      
      marker = new google.maps.Marker({
        position: pos,
        map: map, 
        title:"Hello World!",
        draggable:true
      });
      
      // Add dragging event listeners.
       google.maps.event.addListener(marker, 'dragstart', function() {
         updateMarkerAddress('Dragging...');
       });

       google.maps.event.addListener(marker, 'drag', function() {
         updateMarkerStatus('Dragging...');
         updateMarkerPosition(marker.get_position());
       });

       google.maps.event.addListener(marker, 'dragend', function() {
         updateMarkerStatus('Drag ended');
         geocodePosition(marker.get_position());
       });
    }
    
    function clearMarker() {
      if(marker) {
        marker.setMap(null);
      }
    }
    
    function geocodePosition(pos) {
      geocoder.geocode({latLng: pos}, function(responses) {
        if (responses && responses.length > 0) {
          updateMarkerAddress(responses[0].formatted_address);
        } else {
          updateMarkerAddress('Cannot determine address at this location.');
        }
      });
    }
    
    function updateMarkerStatus(str) {
      $('#markerStatus').html(str);
    }

    function updateMarkerPosition(latLng) {
      $('#markerPosition').html([latLng.lat(), latLng.lng()].join(', '));
    }
    
    function updateMarkerAddress(str) {
      $('#markerAddress').html(str);
    }

    $(document).ready(function() {
      setupMap();
      
     
      
      $('.addMarker').click(function() {
        $('#finishingOffAddingMarker').show();
        var tworgy_id = this.attributes['ref'].value;
        addMarker(tworgy_id, map.getCenter());
        //dialogSetMarker.dialog('open');
        $('#dialogSetMarker').dialog('open');
      });
      
      $('#finishedAddingMarker').click(function() {
        
      });

      $('#clearMarker').click(function() {
        clearMarker();
      });

      $('#findAddress').click(function() {
        findAddress();
      });

      var tabs = $("#tabs").tabs({ selected: 0 });
      
      $('#dialogSetMarker').dialog({
        autoOpen:false,
        modal:true,
        buttons: { 
          "Cancel": function() { $(this).dialog("close"); },
          "Create Tworgy":function() { $(this).dialog("close"); }
        }
      });
      
    });   
   
     
    
#columns
  %fieldset#createTworgy
    %h2 Create a Tworgy
    - if current_user && current_user.twitterer?
    
      %h3 Your lists
      %ul
        - current_user.tworgies.each do |tworgy|
          %li
            = tworgy.slug
            %span.clickable{:class => 'addMarker', :ref => tworgy.id}= "Mark location"
      #finishingOffAddingMarker
        %span#finishedAddingMarker.clickable Finished adding marker
    - else
      - semantic_form_for UserSession.new, :url => user_session_path do |f|
        = oauth_login_button :value => "Login with Twitter"
  %fieldset#map
    %p
      %form{:onsubmit => 'return false;'}
        %label Find a location:
        %input#inputAddress{:type => 'text', :value => '', :size => 60}
        %input#findAddress{:type => 'submit', :value => 'Find'}

    %div{:id => "map_canvas", :style => "width:auto; height:400px; margin:20px 0px;"}
  %p
    %b Marker Status
    %span#markerStatus
  %p 
    %b Marker Position
    %span#markerPosition
  %p
    %b Marker Address
    %span#markerAddress


#dialogSetMarker{:title => "Mark location of "}
  - semantic_form_for Tworgy.new do |f|
    = f.inputs :slug
    - f.buttons do
      = f.commit_button
  %p fdsafasdf
  
  